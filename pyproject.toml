[project]
name = "agentic-ai-workshop"
version = "0.0.1"
description = "The Agentic AI Workshop by ADP Brazil Labs"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    {name = "Douglas Trajano", email = "douglas.trajano@adp.com"},
    {name = "ADP Brazil Labs"},
]
license = { text = "Apache-2.0" }
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "pydantic-ai>=0.7,<1.0",
    "pydantic>=2.0,<3.0",
    "databricks-sdk>=0.63,<1.0",
    "mlflow>=3.2.0,<4.0",
    "datasets>=4.2.0",
]

[project.optional-dependencies]
langgraph = [
    "langgraph>=0.2.0",
    "langchain-core>=0.3.0",
]
export = [
    "pandas>=2.0.0",
    "pyarrow>=10.0.0",
]
all = [
    "langgraph>=0.2.0",
    "langchain-core>=0.3.0",
    "pandas>=2.0.0",
    "pyarrow>=10.0.0",
]

[project.urls]
Homepage = "https://dougtrajano.github.io/agentic-ai-workshop/"
Documentation = "https://dougtrajano.github.io/agentic-ai-workshop/"
Source = "https://github.com/dougtrajano/agentic-ai-workshop.git"
"Bug Tracker" = "https://github.com/dougtrajano/agentic-ai-workshop/issues"
Changelog = "https://github.com/DougTrajano/agentic-ai-workshop/releases"

[project.scripts]
docs-serve = "mkdocs.__main__:main"
docs-build = "mkdocs.__main__:main"
docs-deploy = "mike:deploy"

[dependency-groups]
dev = [
    "black>=25.1.0",
    "flake8>=7.0.0",
    "ipykernel>=6.25.0",
    "isort>=5.13.0",
    "jupyterlab>=4.0.0",
    "mypy>=1.14.0",
    "nbstripout>=0.7.1",
    "pre-commit>=4.0.0",
    "pyright>=1.1.398",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "ruff>=0.12.9",
]
docs = [
    "Jinja2>=3.1.6,<4.0",
    "mkdocs-exclude>=1.0.2,<2.0",
    "mkdocs-git-revision-date-localized-plugin>=1.4.7,<2.0",
    "mkdocs-material-extensions>=1.3.1,<2.0",
    "mkdocs-material>=9.6.16,<10.0",
    "mkdocs-section-index>=0.3.10,<1.0",
    "mkdocs-tooltips>=0.1.0,<1.0",
    "mkdocs>=1.6.1,<2.0",
    "mkdocs-glightbox>=0.5,<1.0",
    "mike>=2.1.3",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
line-length = 99
extend-include = ["*.ipynb"]
exclude = [
    ".venv",
    "**/__pycache__",
    "**/node_modules",
    "**/dist",
    "**/build",
    "**/env",
    "**/.ruff_cache",
    "**/.venv",
    "**/.ipynb_checkpoints",
    "src/jobs"
]
force-exclude = true

[tool.ruff.lint]
exclude = ["__init__.py"]
select = ["C", "D", "E", "F", "I", "W"]
ignore = ["C901", "E501", "E741", "F402", "F823", "D100", "D106"]

[tool.ruff.lint.isort]
lines-after-imports = 2
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
split-on-trailing-comma = true

[tool.ruff.lint.per-file-ignores]
"**/*.ipynb" = ["F704"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "live: mark test as making live API calls",
    "asyncio: mark a test as an asyncio coroutine",
]

[tool.coverage.report]
exclude_also = [
    'pragma: no cover',
    'if __name__ == .__main__.:\n    main()',
]

[tool.coverage.run]
source = ["workshop"]

[tool.bandit]
exclude_dirs = ["venv",".venv","tests"]
skips = ["B101", "B601", "B108"]

[tool.bandit.assert_used]
exclude = ["*_test.py", "*test_*.py"]
